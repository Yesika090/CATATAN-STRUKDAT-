app = Flask(__name__)
app.secret_key = 'your_secret_key'

def get_db_connection():
    connection = sqlite3.connect("user.db")
    connection.row_factory = sqlite3.Row
    return connection

@app.route('/success/<name>', methods=['GET'] )
def success(name):
    return f'Proses data user : {name} berhasil'

@app.route('/userlist')
def userList():
    users = getAllUser ()
    return render_template('userlist.html', title='Daftar User', listuser=users)

@app.route("/login", methods=['POST']) 
def login():
    username = request.form.get("username")
    password = request.form.get("password")
    
    connection = get_db_connection()
    user = connection.execute('SELECT * FROM user WHERE username = ? AND password = ?', (username, password)).fetchone()
    connection.close()
    
    if user:
        return redirect(url_for('success', name=username))
    else:
        return 'Login gagal, username atau password salah'

@app.route("/registeruser", methods=['POST']) 
def registeruser():
    username = request.form.get("username")
    password = request.form.get("password")
    
    connection = get_db_connection()
    try:
        connection.execute('INSERT INTO user (username, password) VALUES (?, ?)', (username, password))
        connection.commit()
        return redirect(url_for('success', name=username))
    except sqlite3.IntegrityError:
        return 'Registrasi gagal, username sudah terdaftar'
    finally:
        connection.close()

def getAllUser(): 
    # Open database connection
    connection = get_db_connection()
    cursor = connection.cursor()
    # Execute the query
    cursor.execute("SELECT realname, pob, username, password FROM user;")    

    # convert it into dictionary
    desc = cursor.description
    column_names = [col[0] for col in desc]
    data = [dict(zip(column_names, row))  
        for row in cursor.fetchall()]
    # Close the connection
    connection.close()
    return data

if __name__ == '__main__':
    app.run(debug=True)
